#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Node.js Downloader - Vers√£o Manual para Ambientes Corporativos

Esta vers√£o ajuda voc√™ a baixar manualmente as vers√µes do Node.js
quando h√° problemas de proxy/firewall corporativo.
"""

import os
import sys
from pathlib import Path

def show_manual_instructions(version):
    """Mostra instru√ß√µes para download manual"""
    
    print("üè¢ AMBIENTE CORPORATIVO DETECTADO")
    print("=" * 60)
    print(f"N√£o foi poss√≠vel baixar automaticamente a vers√£o {version}")
    print("devido a restri√ß√µes de rede corporativa.")
    print()
    
    # Garante que a vers√£o comece com 'v'
    if not version.startswith('v'):
        version_formatted = f'v{version}'
    else:
        version_formatted = version
    
    # URLs e instru√ß√µes
    page_url = f"https://nodejs.org/download/release/{version_formatted}/"
    file_pattern = f"node-{version_formatted}-win-x64.zip"
    
    print("üìã INSTRU√á√ïES PARA DOWNLOAD MANUAL:")
    print()
    print("1Ô∏è‚É£ ACESSE A P√ÅGINA:")
    print(f"   {page_url}")
    print()
    print("2Ô∏è‚É£ PROCURE E BAIXE O ARQUIVO:")
    print(f"   üìÅ {file_pattern}")
    print()
    print("3Ô∏è‚É£ SALVE O ARQUIVO EM:")
    base_dir = "d:/nvm"
    version_dir = f"node-v{version}"
    full_path = os.path.join(base_dir, version_dir)
    print(f"   üìÇ {full_path}/")
    print()
    print("4Ô∏è‚É£ EXECUTE O EXTRATOR:")
    print(f"   py node_extract.py \"{full_path}\\{file_pattern}\"")
    print()
    
    # Cria o diret√≥rio
    os.makedirs(full_path, exist_ok=True)
    print(f"‚úÖ Diret√≥rio criado: {full_path}")
    print()
    
    print("üåê ALTERNATIVAS DE DOWNLOAD:")
    print("‚Ä¢ Use seu navegador web (geralmente funciona)")
    print("‚Ä¢ Use um gerenciador de download (IDM, etc.)")
    print("‚Ä¢ Pe√ßa para o TI liberar o acesso ao nodejs.org")
    print("‚Ä¢ Use uma conex√£o pessoal (hotspot do celular)")
    print()
    
    return full_path

def main():
    """Fun√ß√£o principal"""
    print("Node.js Downloader - Vers√£o Manual")
    print("=" * 40)
    
    if len(sys.argv) < 2:
        version = input("Digite a vers√£o do Node.js (ex: 14.15.4): ").strip()
    else:
        version = sys.argv[1].strip()
    
    if not version:
        print("‚ùå Vers√£o n√£o informada")
        return
    
    show_manual_instructions(version)

if __name__ == "__main__":
    main()